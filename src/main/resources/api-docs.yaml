openapi: 3.0.1
info:
  title: Product Service Api
servers:
- url: http://localhost:9092
  description: Generated server url
paths:
  /api/product/update/{id}:
    put:
      tags:
      - product-controller
      summary: This is to update the Product by Id stored in Db
      operationId: updateProduct
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
        required: true
      responses:
        "404":
          description: Page not found
        "200":
          description: update the Product By Id
          content:
            application/json: {}
  /api/product/add:
    post:
      tags:
      - product-controller
      summary: This is to add the Product in Database
      operationId: createProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
        required: true
      responses:
        "404":
          description: Page not found
        "200":
          description: Details saved the Database
          content:
            application/json: {}
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductResponse'
  /api/product:
    get:
      tags:
      - product-controller
      operationId: getMessage
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/product/getById/{id}:
    get:
      tags:
      - product-controller
      summary: This is to fetch the Product by Id stored in Db
      operationId: getProductById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Details of the Product By Id
          content:
            application/json: {}
        "404":
          description: Page not found
  /api/product/getAll:
    get:
      tags:
      - product-controller
      summary: This is to fetch All the Products stored in Db
      operationId: getAllProducts
      responses:
        "200":
          description: Details of All the Products
          content:
            application/json: {}
        "404":
          description: Page not found
  /api/product/deleteById/{id}:
    delete:
      tags:
      - product-controller
      summary: This is to delete the Product by Id stored in Db
      operationId: deleteById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "404":
          description: Page not found
        "200":
          description: delete the Product By Id
          content:
            application/json: {}
components:
  schemas:
    ProductRequest:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        price:
          type: number
    ProductResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        price:
          type: number
